{"version":3,"sources":["utils/alert.js","utils/axiosApiEndPoint.js","utils/setAuthToken.js","redux/actions/types.js","redux/actions/errorsAction.js","redux/actions/authActions.js","redux/actions/profileActions.js","components/layouts/Navbar.js","components/layouts/Footer.js","utils/utils.js","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","redux/reducers/profileReducer.js","redux/reducers/processingReducer.js","redux/reducers/postReducer.js","redux/reducers/deleteReducer.js","redux/reducers/index.js","redux/store.js","components/layouts/Landing.js","components/common/TextFieldGroup.js","components/auth/Login.js","components/auth/Register.js","components/common/PrivateRoute.js","components/common/Spinner.js","components/dashboard/DeleteProfile.js","redux/actions/deleteActions.js","components/experience/Experience.js","components/dashboard/ProfileActions.js","components/education/Education.js","components/dashboard/Dashboard.js","components/common/TextAreaFieldGroup.js","components/common/SelectListGroup.js","components/common/InputGroup.js","components/create-profile/CreateProfileForm.js","components/create-profile/CreateProfile.js","components/edit-profile/EditProfile.js","components/experience/ExperienceForm.js","components/experience/AddExperience.js","components/education/EducationForm.js","components/education/AddEducation.js","components/experience/EditExperience.js","components/education/EditEducation.js","components/all-profiles/ProfileCard.js","components/all-profiles/Profiles.js","components/profile/ProfileAbout.js","components/profile/ProfileCreds.js","components/profile/ProfileGithub.js","components/profile/ProfileHeader.js","components/profile/Profile.js","components/not-found/NotFound.js","redux/actions/postActions.js","components/post/PostForm.js","components/post/PostItem.js","components/post/PostFeed.js","components/post/Posts.js","components/comment/CommentForm.js","components/comment/CommentItem.js","components/comment/CommentFeed.js","components/post/SinglePost.js","components/post/EditPost.js","Routing.js","redux/actions/utilActions.js","components/common/DeleteRecord.js","App.js","utils/addInterceptor.js","serviceWorker.js","index.js"],"names":["toast","require","emitToaster","position","autoClose","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","draggable","progress","undefined","toastText","type","TYPE","DEFAULT","INFO","SUCCESS","WARNING","ERROR","DARK","axiosAPI","axios","create","baseURL","setAuthToken","token","defaults","headers","common","GET_POST","setErrors","errors","payload","setCurrentUser","decodedToken","logoutUser","history","dispatch","localStorage","removeItem","push","getCurrentProfile","setProfileLoading","get","then","res","data","catch","err","response","noprofile","createUserProfile","profileData","post","_res","substr","length","deleteUserExperience","id","delete","deleteUserEducation","Navbar","useDispatch","useHistory","isAuthenticated","useSelector","state","auth","user","guestLinks","className","to","authLinks","src","avatar","alt","name","title","href","onClick","data-toggle","data-target","Footer","Date","getFullYear","isEmpty","value","Object","keys","trim","setDateFormat","date","year","toString","month","getMonth","day","getDate","initialState","profile","profiles","loading","processing","flag","posts","resetText","modalType","modalFunc","modalParam","combineReducers","action","i","_id","filter","enhancer","applyMiddleware","thunk","store","createStore","rootReducer","Landing","guestMarkup","authMarkup","useEffect","document","TextFieldGroup","disabled","error","handleStateObject","info","onChange","placeholder","e","target","defaultProps","Login","props","useState","email","setEmail","password","setPassword","onSubmit","userData","preventDefault","setItem","jwt_decode","withRouter","fullname","setFullname","cpassword","setCpassword","cPassword","PrivateRoute","Component","component","rest","authState","verified","_err","render","Spinner","spinnerType","spinnerColor","indexOf","role","DeleteProfile","usernameState","username","setUsername","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","window","$","modal","initDelete","deleteInfo","Experience","experience","map","exp","key","company","from","toLocaleDateString","current","pathname","handleUpdate","ProfileActions","Education","education","edu","school","degree","Dashboard","profileState","handle","TextAreaFieldGroup","SelectListGroup","options","selectOptions","option","label","InputGroup","icon","style","minWidth","CreateProfileForm","handleSubmit","formData","handleOnChange","formType","disableButton","displaySocial","setDisplaySocial","status","website","location","skills","githubUsername","bio","twitter","facebook","linkedin","youtube","instagram","CreateProfile","setFormData","processingState","EditProfile","skillsCSV","join","social","setUserData","gravatar","ExperienceForm","handleFormSubmit","handleChange","handleCheck","checked","htmlFor","description","AddExperience","setState","expData","EducationForm","fieldOfStudy","AddEducation","eduData","EditExperience","locationState","put","EditEducation","ProfileCard","slice","skill","index","Profiles","ProfileAbout","firstName","split","ProfileCreds","experienceMarkup","educationMarkup","ProfileGithub","repos","setRepos","setError","fetch","json","message","repo","html_url","rel","language","license","watchers_count","forks_count","stargazers_count","size","toFixed","homepage","ProfileHeader","Profile","renderedFrom","match","params","NotFound","getAllPosts","startPostLoading","nopost","deleteUserPost","unableToDelete","fetchSinglePost","dispatchType","deleteUserComment","postID","commentID","commentDeleteError","notAuthorised","setResetText","PostForm","text","setText","postData","postSave","PostItem","userID","showPostActions","postDate","alreadyLiked","likes","like","notLiked","comments","toLocaleString","PostFeed","Posts","userPost","setUserPost","CommentForm","commentData","commentError","CommentItem","comment","post_id","post_user_id","commentDate","class","CommentFeed","SinglePost","EditPost","Routing","exact","path","Register","setProcessing","isProcessing","DeleteRecord","deleteState","param","interceptors","request","use","req","Promise","reject","toLowerCase","initInterceptor","authToken","currentTime","now","App","basename","process","hashType","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.7a4ce7da.chunk.js","sourcesContent":["const { toast } = require('react-toastify');\n\nconst emitToaster = ({\n    position = 'top-right',\n    autoClose = 5000,\n    hideProgressBar = false,\n    closeOnClick = false,\n    pauseOnFocusLoss = true,\n    pauseOnHover = true,\n    draggable = true,\n    progress = undefined,\n    toastText = '',\n    type = toast.TYPE.DEFAULT,\n}) => {\n    switch (type) {\n        case \"info\": type = toast.TYPE.INFO; break;\n        case \"success\": type = toast.TYPE.SUCCESS; break;\n        case \"warning\": type = toast.TYPE.WARNING; break;\n        case \"error\": type = toast.TYPE.ERROR; break;\n        case \"dark\": type = toast.TYPE.DARK; break;\n        default: type = toast.TYPE.DEFAULT;\n    }\n\n    toast(toastText, {\n        position,\n        autoClose,\n        hideProgressBar,\n        closeOnClick,\n        pauseOnFocusLoss,\n        pauseOnHover,\n        draggable,\n        progress,\n        type,\n    });\n}\n\nexport default emitToaster;\n\n/**\n * usages:\n *\n *  import emiteToaster from 'path';\n *\n *  emitToaster({\n *      toastText: 'This is a temp toast',\n *      type: 'success'\n *  });\n */\n","import axios from 'axios';\n\nconst axiosAPI = axios.create({\n    // baseURL: 'https://dev-social-media-server.herokuapp.com/'\n    baseURL: 'https://devsocialmedia.glitch.me'\n});\n\nexport default axiosAPI;\n","import axiosAPI from './axiosApiEndPoint';\n\nconst setAuthToken = token => {\n    if (token) {\n        // apply to every request\n        axiosAPI.defaults.headers.common['Authorization'] = token;\n    } else {\n        // delete auth token\n        delete axiosAPI.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;\n","// error actions\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// login action\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\n// profile actions\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_ALL_PROFILES = 'GET_ALL_PROFILES';\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\nexport const NO_PROFILE = 'NO_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\n// for processing state\nexport const PROCESSING = 'PROCESSING';\n\n// for post actions\nexport const POST_LOADING = 'POST_LOADING';\nexport const GET_POST = 'GET_POST';\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const RESET_TEXT = 'RESET_TEXT';\nexport const REPLACE_POST = 'REPLACE_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n\n// for delete actions\nexport const INIT_DELETE = 'INIT_DELETE';\nexport const CLEAR_DELETE = 'CLEAR_DELETE';\n","import { CLEAR_ERRORS, SET_ERRORS } from \"./types\";\n\n// store the errors in the store and returns\nexport const setErrors = (errors) => ({\n    type: SET_ERRORS,\n    payload: errors,\n});\n\n\n// clear the errors in the store\nexport const clearErrors = () => ({\n    type: CLEAR_ERRORS,\n});\n","// import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport emitToaster from '../../utils/alert';\n\nimport setAuthToken from '../../utils/setAuthToken';\nimport { clearErrors, setErrors } from './errorsAction';\nimport { SET_CURRENT_USER } from './types';\nimport axiosAPI from '../../utils/axiosApiEndPoint';\n\nexport const registerUser = (userData, history) => dispatch => {\n    axiosAPI\n        .post('/api/user/register', userData)\n        .then(_res => {\n            history.push('/login');\n            emitToaster({\n                toastText: 'You have successfully registered. Please Login to continue',\n                type: 'success'\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => dispatch(setErrors(err.response.data)));\n}\n\nexport const loginUser = (userData) => dispatch => {\n    axiosAPI\n        .post('/api/user/login', userData)\n        .then(res => {\n            // extract the token from response\n            const { token } = res.data;\n            // save it to localStorage\n            localStorage.setItem('authToken', token);\n            // set it to the Auth Header for protected route\n            setAuthToken(token);\n            // decode the jwt token\n            const decodedToken = jwt_decode(token);\n            // save user information from decodedToken\n            dispatch(setCurrentUser(decodedToken));\n            // clear the errors\n            dispatch(clearErrors());\n        })\n        .catch(err => dispatch(setErrors(err.response.data)));\n}\n\n// save current user to redux state\nexport const setCurrentUser = decodedToken => ({\n    type: SET_CURRENT_USER,\n    payload: decodedToken,\n});\n\n// logout user\nexport const logoutUser = (history) => dispatch => {\n    // remove authToken from localStorage\n    localStorage.removeItem('authToken');\n    // delete Authorization from request header\n    setAuthToken(false);\n    // remove current user\n    dispatch(setCurrentUser({}));\n    // navigate to the login page\n    if (history && history.push) {\n        history.push('/login');\n    }\n};\n","// import axios from 'axios';\nimport emitToaster from '../../utils/alert';\n\nimport { clearErrors, setErrors } from './errorsAction';\nimport { CLEAR_PROFILE, GET_ALL_PROFILES, GET_PROFILE, PROFILE_LOADING } from './types';\nimport { logoutUser } from './authActions';\nimport axiosAPI from '../../utils/axiosApiEndPoint';\n\n// get current profile\nexport const getCurrentProfile = () => dispatch => {\n    dispatch(setProfileLoading());\n    axiosAPI\n        .get('/api/profile/')\n        .then(res => dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch({\n                type: GET_PROFILE,\n                payload: {}\n            });\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: err.response.data.noprofile || 'Unable to fetch profile',\n                type: 'error'\n            });\n        });\n    // catch block - when no profile is there or any error occur\n}\n\n// create user's profile\nexport const createUserProfile = (profileData, history, type = 'created') => dispatch => {\n    axiosAPI\n        .post('/api/profile/', profileData)\n        .then(_res => {\n            emitToaster({\n                toastText: `Profile is successfully ${type}`,\n                type: 'success'\n            });\n            history.push('/dashboard');\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: `Unable to ${type.substr(0, type.length - 1)} profile. Please check for any error.`,\n                type: 'error'\n            });\n        });\n\n}\n\n// add experience\nexport const addExperience = (expData, history) => dispatch => {\n    axiosAPI\n        .post('/api/profile/experience', expData)\n        .then(res => {\n            history.push('/dashboard');\n            emitToaster({\n                toastText: 'Experience detail is added successfully',\n                type: 'success',\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to add experience detail. Please check for any error',\n                type: 'error',\n            });\n        })\n};\n\n// update an experience\nexport const updateExperience = (expData, history) => dispatch => {\n    axiosAPI\n        .put(`/api/profile/experience/${expData.id}`, expData)\n        .then(res => {\n            history.push('/dashboard');\n            emitToaster({\n                toastText: 'Experience detail is updated successfully',\n                type: 'success',\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to update experience detail. Please check for any error',\n                type: 'error',\n            });\n        })\n};\n\n// delete user experience\nexport const deleteUserExperience = (id) => dispatch => {\n    axiosAPI\n        .delete(`/api/profile/experience/${id}`)\n        .then(res => {\n            dispatch({\n                type: GET_PROFILE,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Experience detail is deleted successfully',\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to delete the experience detail',\n                type: 'error'\n            });\n        });\n};\n\n// add education\nexport const addEducation = (eduData, history) => dispatch => {\n    axiosAPI\n        .post('/api/profile/education', eduData)\n        .then(res => {\n            history.push('/dashboard');\n            emitToaster({\n                toastText: 'Education detail is added successfully',\n                type: 'success',\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to add education detail. Please check for any error',\n                type: 'error',\n            });\n        })\n};\n\n// update an education\nexport const updateEducation = (eduData, history) => dispatch => {\n    axiosAPI\n        .put(`/api/profile/education/${eduData.id}`, eduData)\n        .then(res => {\n            history.push('/dashboard');\n            emitToaster({\n                toastText: 'Education detail is updated successfully',\n                type: 'success',\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to update education detail. Please check for any error',\n                type: 'error',\n            });\n        })\n};\n\n// delete user education\nexport const deleteUserEducation = (id) => dispatch => {\n    axiosAPI\n        .delete(`/api/profile/education/${id}`)\n        .then(res => {\n            dispatch({\n                type: GET_PROFILE,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Education detail is deleted successfully',\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to delete the education detail',\n                type: 'error'\n            });\n        });\n};\n\n// delete user profile\nexport const deleteUserProfile = () => dispatch => {\n    axiosAPI\n        .delete('/api/profile')\n        .then(_res => {\n            dispatch(logoutUser());\n            emitToaster({\n                toastText: 'Your account is successfully deleted.',\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: 'Unable to delete the account',\n                type: 'warning'\n            });\n        });\n};\n\n// get all users profile\nexport const getAllProfiles = () => dispatch => {\n    dispatch(setProfileLoading());\n    axiosAPI\n        .get('/api/profile/all')\n        .then(res => {\n            dispatch({\n                type: GET_ALL_PROFILES,\n                payload: res.data || []\n            });\n        })\n        .catch(_err => {\n            dispatch({\n                type: GET_ALL_PROFILES,\n                payload: [],\n            });\n            emitToaster({\n                toastText: 'Unable to get all the profiles',\n                type: 'error'\n            });\n        })\n}\n\n// get user profile by handle\nexport const getProfileByHandle = (handle, history) => dispatch => {\n    dispatch(setProfileLoading());\n    axiosAPI\n        .get(`/api/profile/handle/${handle}`)\n        .then(res => {\n            dispatch({\n                type: GET_PROFILE,\n                payload: res.data || {}\n            });\n        })\n        .catch(_err => {\n            dispatch({\n                type: GET_PROFILE,\n                payload: [],\n            });\n            history.push('/');\n            emitToaster({\n                toastText: 'Unable to get profile',\n                type: 'error'\n            });\n        });\n}\n\nexport const refreshGravatar = () => dispatch => {\n    axiosAPI\n        .get('/api/user/gravatar')\n        .then(res => {\n            dispatch(getCurrentProfile());\n            emitToaster({\n                toastText: res.data.gravatar,\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: err.response.data.gravatar || 'Unable to refresh gravatar',\n                type: 'error'\n            });\n        });\n}\n\n// set loading as true\nexport const setProfileLoading = () => ({\n    type: PROFILE_LOADING\n});\n\n// clear profile\nexport const clearProfile = () => ({\n    type: CLEAR_PROFILE\n});\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { logoutUser } from '../../redux/actions/authActions';\nimport { clearProfile } from '../../redux/actions/profileActions';\n\nconst Navbar = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const user = useSelector(state => state.auth.user);\n\n    const handleLogout = () => {\n        dispatch(clearProfile());\n        dispatch(logoutUser(history));\n    }\n\n    const guestLinks = (\n        <>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/register\">\n                    Sign Up\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n        </>\n    );\n\n    const authLinks = (\n        <>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/feed\">\n                    Post Feed\n                </Link>\n            </li>\n\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/dashboard\">\n                    <img\n                        className=\"nav-avatar rounded-circle\"\n                        src={user.avatar}\n                        alt={user.name}\n                        title=\"Gravatar associated with your email\"\n                    /> Dashboard\n                </Link>\n            </li>\n\n            <li className=\"nav-item\">\n                <button\n                    className=\"btn btn-link nav-link nav-link-btn\"\n                    href=\"#\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </li>\n        </>\n    );\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Dev Social Media\n                </Link>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#mobile-nav\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/profiles\">\n                                Developers\n                            </Link>\n                        </li>\n                    </ul>\n\n                    <ul className=\"navbar-nav ml-auto\">\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <>\n            <footer className=\"bg-dark text-white mt-4 p-3 text-center\">\n                Copyright &copy; {new Date().getFullYear()} Dev Social Media\n            </footer>\n        </>\n    );\n}\n","export const isEmpty = value => (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n);\n\nexport const sortArrByDate = (arr, dateField, reversed = false) => {\n    arr.sort((a, b) => new Date(a[dateField]) - new Date(b[dateField]));\n    if (reversed) {\n        arr.reverse();\n    }\n    return arr;\n}\n\nexport const setDateFormat = (date) => {\n    let year = date.getFullYear().toString();\n    let month = (date.getMonth() + 1).toString();\n    let day = date.getDate().toString();\n\n    while (year.length !== 4) {\n        year = '0' + year;\n    }\n    while (month.length !== 2) {\n        month = '0' + month;\n    }\n    while (day.length !== 2) {\n        day = '0' + day;\n    }\n\n    return `${year}-${month}-${day}`;\n}\n","import { isEmpty } from '../../utils/utils';\nimport { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        default:\n            return state;\n    };\n}\n","import { SET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_ERRORS:\n            return action.payload;\n        case CLEAR_ERRORS:\n            return {};\n        default:\n            return state;\n    };\n}\n","import {\n    CLEAR_PROFILE,\n    GET_ALL_PROFILES,\n    GET_PROFILE,\n    PROFILE_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: null,\n    loading: false,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROFILE:\n            return {\n                ...state,\n                profile: action.payload,\n                loading: false\n            };\n        case PROFILE_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null\n            };\n        case GET_ALL_PROFILES:\n            return {\n                ...state,\n                profiles: action.payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n}\n","import { PROCESSING } from \"../actions/types\";\n\nconst initialState = {\n    processing: false,\n    flag: 0,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case PROCESSING:\n            state.flag += (action.payload ? 1 : -1);\n            state.processing = (state.flag !== 0);\n            break;\n        default:\n            break;\n    };\n    return state;\n}\n","import {\n    ADD_POST,\n    DELETE_POST,\n    GET_POST,\n    GET_POSTS,\n    POST_LOADING,\n    REPLACE_POST,\n    RESET_TEXT,\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    post: {},\n    posts: [],\n    resetText: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [action.payload, ...state.posts],\n            };\n        case POST_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case REPLACE_POST:\n            for (let i = 0; i < state.posts.length; i++) {\n                if (state.posts[i]._id === action.payload._id) {\n                    state.posts[i] = action.payload;\n                    break;\n                }\n            }\n            return { ...state };\n        case GET_POST:\n            return {\n                ...state,\n                post: action.payload,\n                loading: false\n            };\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: action.payload,\n                loading: false\n            };\n        case RESET_TEXT:\n            return {\n                ...state,\n                resetText: action.payload,\n                loading: false,\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== action.payload)\n            };\n        default:\n            return state;\n    }\n}\n","import { CLEAR_DELETE, INIT_DELETE } from \"../actions/types\";\n\nconst initialState = {\n    modalType: null,\n    modalFunc: null,\n    modalParam: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case INIT_DELETE:\n            return {\n                modalType: action.payload.modalType,\n                modalFunc: action.payload.modalFunc,\n                modalParam: action.payload.modalParam || null,\n            };\n        case CLEAR_DELETE:\n            return initialState;\n        default:\n            return state;\n    };\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport profileReducer from './profileReducer';\nimport processingReducer from './processingReducer';\nimport postReducer from './postReducer';\nimport deleteReducer from './deleteReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    profile: profileReducer,\n    processing: processingReducer,\n    post: postReducer,\n    delete: deleteReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst enhancer = (process.env.NODE_ENV === \"development\" && window.__REDUX_DEVTOOLS_EXTENSION__)\n    ? compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ) : applyMiddleware(thunk);\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    enhancer\n);\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst Landing = () => {\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const user = useSelector(state => state.auth.user);\n\n    const guestMarkup = (\n        <>\n            <p className=\"lead\">\n                Create a developer profile/portfolio, share\n                posts and get help from other developers\n            </p>\n            <hr />\n            <Link\n                to=\"/register\"\n                className=\"btn btn-lg btn-info mr-2\"\n            >\n                Sign Up\n            </Link>\n            <Link\n                to=\"/login\"\n                className=\"btn btn-lg btn-light\"\n            >\n                Login\n            </Link>\n        </>\n    );\n\n    const authMarkup = (\n        <>\n            <p className=\"lead\">\n                Welcome, {user.name}\n            </p>\n            <hr />\n            <Link\n                to=\"/dashboard\"\n                className=\"btn btn-lg btn-dark mr-2\"\n            >\n                Go to dashboard\n            </Link>\n        </>\n    );\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Home';\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"landing\">\n            <div className=\"dark-overlay landing-inner text-light\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 text-center\">\n                            <h1 className=\"display-3 mb-4\">\n                                Developer Social Media\n                            </h1>\n                            {isAuthenticated ? authMarkup : guestMarkup}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n    disabled,\n    error,\n    handleStateObject,\n    info,\n    name,\n    onChange,\n    placeholder,\n    type,\n    value\n}) => {\n    const handleInputChange = (e) => {\n        onChange(handleStateObject ? e : e.target.value);\n    }\n\n    return (\n        <div className=\"form-group\">\n            <input\n                type={type}\n                className={`form-control form-control-md${error ? ' is-invalid' : ''}`}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={handleInputChange}\n                disabled={disabled}\n            />\n\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            {info && (<small className=\"form-text text-muted\">{info}</small>)}\n        </div>\n    );\n}\n\nTextFieldGroup.propTypes = {\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    handleStateObject: PropTypes.bool,\n    info: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n};\n\nTextFieldGroup.defaultProps = {\n    disabled: false,\n    handleStateObject: false,\n    type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { loginUser } from '../../redux/actions/authActions';\nimport { clearErrors } from '../../redux/actions/errorsAction';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const errors = useSelector(state => state.errors) || {};\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const processing = useSelector(state => state.processing.processing);\n\n    const processLogin = (e) => {\n        e.preventDefault();\n        const loginData = { email, password };\n\n        dispatch(loginUser(loginData));\n    };\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/dashboard');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAuthenticated]);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Login';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (!isAuthenticated ? (\n        <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Log In</h1>\n                <p className=\"lead text-center\">\n                    Sign in to your Dev Social Media account\n                </p>\n                <form onSubmit={processLogin}>\n                    <TextFieldGroup\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={setEmail}\n                        error={errors.email}\n                    />\n\n                    <TextFieldGroup\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={setPassword}\n                        error={errors.password}\n                    />\n\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-info btn-block mt-4\"\n                        value=\"Login\"\n                        disabled={processing}\n                    />\n                </form>\n            </div>\n        </div>\n    ) : (\n            ''\n        )\n    );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { registerUser } from '../../redux/actions/authActions';\nimport { clearErrors } from '../../redux/actions/errorsAction';\n\nconst Register = (props) => {\n    const [fullname, setFullname] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [cpassword, setCpassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const errors = useSelector(state => state.errors);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const processing = useSelector(state => state.processing.processing);\n\n    const completeSignup = (e) => {\n        e.preventDefault();\n\n        const newUser = {\n            name: fullname,\n            email,\n            password,\n            cPassword: cpassword\n        };\n        dispatch(registerUser(newUser, props.history));\n    };\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/dashboard');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAuthenticated]);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Register';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (!isAuthenticated ? (\n        <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Sign Up</h1>\n                <p className=\"lead text-center\">\n                    Create your Dev Social Media account\n                </p>\n                <form onSubmit={completeSignup}>\n                    <TextFieldGroup\n                        placeholder=\"Name\"\n                        name=\"name\"\n                        value={fullname}\n                        onChange={setFullname}\n                        error={errors.name}\n                    />\n\n                    <TextFieldGroup\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={setEmail}\n                        error={errors.email}\n                        info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                    />\n\n                    <TextFieldGroup\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={setPassword}\n                        error={errors.password}\n                    />\n\n                    <TextFieldGroup\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"cpassword\"\n                        value={cpassword}\n                        onChange={setCpassword}\n                        error={errors.cPassword}\n                    />\n\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-info btn-block mt-4\"\n                        value=\"Register\"\n                        disabled={processing}\n                    />\n                </form>\n            </div>\n        </div>\n    ) : (\n            ''\n        )\n    );\n};\n\nexport default withRouter(Register);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n// import axios from 'axios';\nimport axiosAPI from '../../utils/axiosApiEndPoint';\nimport emitToaster from '../../utils/alert';\nimport { logoutUser } from '../../redux/actions/authActions';\n\nconst PrivateRoute = ({\n    component: Component,\n    ...rest\n}) => {\n    const dispatch = useDispatch();\n    const authState = useSelector(state => state.auth);\n\n    const authenticateToken = () => {\n        axiosAPI\n            .get('/api/user/verify')\n            .then(res => {\n                if (res.data.verified !== true) {\n                    emitToaster({\n                        toastText: \"Unauthorized Access is not permitted\",\n                        type: 'error',\n                    });\n                    dispatch(logoutUser());\n                }\n            }).catch(_err => dispatch(logoutUser()));\n    }\n\n    useEffect(() => {\n        authenticateToken();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Route\n            {...rest}\n            render={props => authState.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                    <Redirect to=\"login\" />\n                )\n            }\n        />\n    );\n}\n\nPrivateRoute.propTypes = ({\n    component: PropTypes.func.isRequired\n});\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Spinner = ({\n    spinnerType,\n    spinnerColor,\n    position\n}) => {\n    // provide default value in case of wrong propType value\n    if (spinnerType === 'border' && spinnerType === 'grow') {\n        spinnerType = 'border';\n    }\n\n    const colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n    if (colors.indexOf(spinnerColor) === -1) {\n        spinnerColor = 'dark';\n    }\n\n    return (\n        <div className={`spinner-comp${position === 'absolute' ? ' spinner-absolute' : ''}`}>\n            <div className={`spinner-${spinnerType} text-${spinnerColor}`} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    );\n}\n\nSpinner.propTypes = ({\n    spinnerType: PropTypes.string,\n    spinnerColor: PropTypes.string,\n    position: PropTypes.string,\n});\n\nSpinner.defaultProps = ({\n    spinnerType: 'border',\n    spinnerColor: 'dark',\n    position: 'fixed',\n});\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUserProfile } from '../../redux/actions/profileActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nconst DeleteProfile = () => {\n    const dispatch = useDispatch();\n    const usernameState = useSelector(state => state.auth.user.name);\n    const [username, setUsername] = useState('');\n\n    const handleDeleteProfile = () => {\n        dispatch(deleteUserProfile());\n        // handle modal hide event manually\n        window.$('#deleteProfileModal').modal('hide');\n    }\n\n    return (\n        <div className=\"mt-3\">\n            <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-toggle=\"modal\"\n                data-target=\"#deleteProfileModal\"\n            >\n                Delete Account\n            </button>\n\n            <div\n                className=\"modal fade\"\n                id=\"deleteProfileModal\"\n                tabIndex=\"-1\"\n                aria-labelledby=\"deleteProfileModal\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete Account</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p className=\"lead\">\n                                This action can not be undone and will <strong>delete </strong>\n                                your DevSocialMedia account\n                                <br /><br />\n                                <strong>Note: </strong>\n                                This will not delete your comments and posts as they might be useful for other developers.\n                                If you want to delete those, you need to do that manually.\n                            </p>\n                            <br />\n                            Type your name (<strong>{usernameState}</strong>) to proceed.\n                            <TextFieldGroup\n                                value={username}\n                                onChange={setUsername}\n                                name=\"deleteUserAccount\"\n                                info=\"Case sensitive field\"\n                                placeholder={usernameState}\n                            />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\">Cancel</button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-danger\"\n                                disabled={username !== usernameState}\n                                onClick={handleDeleteProfile}\n                            >\n                                Yes, Delete My Account\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default DeleteProfile;\n","import { CLEAR_DELETE, INIT_DELETE } from \"./types\";\n\nexport const initDelete = (deleteInfo) => ({\n    type: INIT_DELETE,\n    payload: deleteInfo\n});\n\nexport const clearDelete = () => ({ type: CLEAR_DELETE });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteUserExperience } from '../../redux/actions/profileActions';\nimport { initDelete } from '../../redux/actions/deleteActions';\n\nconst Experience = ({ experience }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleDelete = (id) => {\n        dispatch(initDelete({\n            modalType: 'experience',\n            modalFunc: deleteUserExperience,\n            modalParam: id\n        }));\n    };\n\n    const handleUpdate = (exp) => {\n        history.push({\n            pathname: '/edit-experience',\n            state: { experience: exp }\n        });\n    };\n\n    return (\n        <div>\n            <h4 className=\"mb-2\">Experience Credentials</h4>\n            <div className=\"table-responsive\">\n                <table className=\"table table-sm table-hover table\">\n                    <thead>\n                        <tr>\n                            <th>Company</th>\n                            <th>Title</th>\n                            <th>Years</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {experience.map(exp => (\n                            <tr key={exp._id}>\n                                <td className=\"align-middle\">{exp.company}</td>\n                                <td className=\"align-middle\">{exp.title}</td>\n                                <td className=\"align-middle\">\n                                    {new Date(exp.from).toLocaleDateString()}\n                                    {\" - \"}\n                                    {exp.current ? 'Present' : (exp.to ? new Date(exp.to).toLocaleDateString() : 'Present')}\n                                </td>\n                                <td className=\"align-middle\">\n                                    <button\n                                        className=\"btn btn-info btn-sm m-1\"\n                                        onClick={() => handleUpdate(exp)}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        className=\"btn btn-danger btn-sm m-1\"\n                                        onClick={() => handleDelete(exp._id)}\n                                        data-toggle=\"modal\"\n                                        data-target=\"#deleteRecord\"\n                                    >\n                                        Delete\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n};\n\nExperience.defaultProps = {\n    experience: [],\n}\n\nexport default Experience;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProfileActions = () => {\n    return (\n        <div className=\"btn-group mb-4\" role=\"group\">\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">\n                <i className=\"fas fa-user-circle text-info mr-1\"></i> Edit Profile\n            </Link>\n            <Link to=\"/add-experience\" className=\"btn btn-light\">\n                <i className=\"fab fa-black-tie text-info mr-1\"></i> Add Experience\n            </Link>\n            <Link to=\"/add-education\" className=\"btn btn-light\">\n                <i className=\"fas fa-graduation-cap text-info mr-1\"></i> Add Education\n            </Link>\n        </div>\n    )\n};\n\nexport default ProfileActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteUserEducation } from '../../redux/actions/profileActions';\nimport { initDelete } from '../../redux/actions/deleteActions';\n\nconst Education = ({ education }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleDelete = (id) => {\n        dispatch(initDelete({\n            modalType: 'education',\n            modalFunc: deleteUserEducation,\n            modalParam: id\n        }));\n    };\n\n    const handleUpdate = (edu) => {\n        history.push({\n            pathname: '/edit-education',\n            state: { education: edu }\n        });\n    };\n\n    return (\n        <div>\n            <h4 className=\"mb-2 mt-3\">Education Credentials</h4>\n            <div className=\"table-responsive\">\n                <table className=\"table table-sm table-hover table\">\n                    <thead>\n                        <tr>\n                            <th>School</th>\n                            <th>Degree</th>\n                            <th>Years</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {education.map(edu => (\n                            <tr key={edu._id}>\n                                <td className=\"align-middle\">{edu.school}</td>\n                                <td className=\"align-middle\">{edu.degree}</td>\n                                <td className=\"align-middle\">\n                                    {new Date(edu.from).toLocaleDateString()}\n                                    {\" - \"}\n                                    {edu.current ? 'Present' : (edu.to ? new Date(edu.to).toLocaleDateString() : 'Present')}\n                                </td>\n                                <td className=\"align-middle\">\n                                    <button\n                                        className=\"btn btn-info btn-sm m-1\"\n                                        onClick={() => handleUpdate(edu)}\n                                    >\n                                        Update\n                                    </button>\n                                    <button\n                                        className=\"btn btn-danger btn-sm m-1\"\n                                        onClick={() => handleDelete(edu._id)}\n                                        data-toggle=\"modal\"\n                                        data-target=\"#deleteRecord\"\n                                    >\n                                        Delete\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n};\n\nEducation.defaultProps = {\n    education: [],\n}\n\nexport default Education;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getCurrentProfile } from '../../redux/actions/profileActions';\nimport Spinner from '../common/Spinner';\nimport DeleteProfile from './DeleteProfile';\nimport Experience from '../experience/Experience';\nimport ProfileActions from './ProfileActions';\nimport Education from '../education/Education';\n\nconst Dashboard = (props) => {\n    const dispatch = useDispatch();\n    const authState = useSelector(state => state.auth);\n    const profileState = useSelector(state => state.profile);\n\n    const { user } = authState;\n    const { loading, profile } = profileState;\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Dashboard';\n        dispatch(getCurrentProfile());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {loading || profile === null ? (\n                    <Spinner />\n                ) : (\n                        <>\n                            <h1 className=\"display-4 h1\">Dashboard</h1>\n\n                            {Object.keys(profile).length > 0 ? (\n                                <>\n                                    <p className=\"lead text-muted\">\n                                        Welcome&nbsp;\n                                        <Link to={{\n                                            pathname: `profile/${profile.handle}`,\n                                            state: 'dashboard'\n                                        }}>{user && user.name}</Link>\n                                    </p>\n                                    <ProfileActions />\n                                    {profile.experience && profile.experience.length > 0 && (\n                                        <Experience experience={profile.experience} />\n                                    )}\n                                    {profile.education && profile.education.length > 0 && (\n                                        <Education education={profile.education} />\n                                    )}\n                                </>\n                            ) : (\n                                    <>\n                                        <p>You have not setup profile yet. Please create your profile to get started.</p>\n                                        <Link to=\"create-profile\" className=\"btn btn-info\">Create Profile</Link>\n                                    </>\n                                )\n                            }\n\n                            <DeleteProfile />\n                        </>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextAreaFieldGroup = ({\n    disabled,\n    error,\n    handleStateObject,\n    info,\n    name,\n    onChange,\n    placeholder,\n    value\n}) => {\n    const handleInputChange = (e) => {\n        onChange(handleStateObject ? e : e.target.value);\n    }\n\n    return (\n        <div className=\"form-group\">\n            <textarea\n                className={`form-control form-control-md${error ? ' is-invalid' : ''}`}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={handleInputChange}\n                disabled={disabled}\n            ></textarea>\n\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            {info && (<small className=\"form-text text-muted\">{info}</small>)}\n        </div>\n    );\n}\n\nTextAreaFieldGroup.propTypes = {\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    handleStateObject: PropTypes.bool,\n    info: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n};\n\nTextAreaFieldGroup.defaultProps = {\n    disabled: false,\n    handleStateObject: false,\n}\n\nexport default TextAreaFieldGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({\n    disabled,\n    error,\n    handleStateObject,\n    info,\n    name,\n    onChange,\n    options,\n    value\n}) => {\n    const selectOptions = options.map(option => (\n        <option key={option.label} value={option.value}>\n            {option.label}\n        </option>\n    ));\n\n    const handleInputChange = (e) => {\n        onChange(handleStateObject ? e : e.target.value);\n    }\n\n    return (\n        <div className=\"form-group\">\n            <select\n                className={`form-control form-control-md${error ? ' is-invalid' : ''}`}\n                name={name}\n                value={value}\n                onChange={handleInputChange}\n                disabled={disabled}\n            >\n                {selectOptions}\n            </select>\n\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\n            {info && (<small className=\"form-text text-muted\">{info}</small>)}\n        </div>\n    );\n}\n\nSelectListGroup.propTypes = {\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    handleStateObject: PropTypes.bool,\n    info: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired,\n};\n\nSelectListGroup.defaultProps = {\n    disabled: false,\n    handleStateObject: false,\n}\n\nexport default SelectListGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputGroup = ({\n    disabled,\n    error,\n    handleStateObject,\n    icon,\n    name,\n    onChange,\n    placeholder,\n    type,\n    value\n}) => {\n    const handleInputChange = (e) => {\n        onChange(handleStateObject ? e : e.target.value);\n    }\n\n    return (\n        <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" style={{ minWidth: 44 }}>\n                    <i className={`fab fa-${icon}`}></i>\n                </span>\n            </div>\n\n            <input\n                type={type}\n                className={`form-control form-control-md${error ? ' is-invalid' : ''}`}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={handleInputChange}\n                disabled={disabled}\n            />\n\n            { error && (<div className=\"invalid-feedback\">{error}</div>)}\n        </div >\n    );\n}\n\nInputGroup.propTypes = {\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    handleStateObject: PropTypes.bool,\n    icon: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n};\n\nInputGroup.defaultProps = {\n    disabled: false,\n    handleStateObject: false,\n    type: 'text'\n}\n\nexport default InputGroup;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport InputGroup from '../common/InputGroup';\n\nconst CreateProfileForm = ({\n    handleSubmit,\n    formData,\n    handleOnChange,\n    errors,\n    formType,\n    disableButton,\n}) => {\n    const [displaySocial, setDisplaySocial] = useState(false);\n\n    const selectOptions = [\n        { value: '', label: '* Select Professional Status' },\n        { value: 'Developer', label: 'Developer' },\n        { value: 'Junior Developer', label: 'Junior Developer' },\n        { value: 'Senior Developer', label: 'Senior Developer' },\n        { value: 'Manager', label: 'Manager' },\n        { value: 'Student or Learning', label: 'Student or Learning' },\n        { value: 'Instructor', label: 'Instructor or Teacher' },\n        { value: 'Intern', label: 'Intern' },\n        { value: 'Other', label: 'Other' }\n    ];\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextFieldGroup\n                placeholder=\"* Profile Handle\"\n                name=\"handle\"\n                value={formData.handle}\n                onChange={handleOnChange}\n                error={errors.handle}\n                info=\"A unique handle for your profile URL\"\n                handleStateObject\n            />\n\n            <SelectListGroup\n                name=\"status\"\n                value={formData.status}\n                onChange={handleOnChange}\n                options={selectOptions}\n                error={errors.status}\n                info=\"Give us an idea of where you are at in your career\"\n                handleStateObject\n            />\n\n            <TextFieldGroup\n                name=\"company\"\n                placeholder=\"Company\"\n                value={formData.company}\n                onChange={handleOnChange}\n                error={errors.company}\n                info=\"Could be your own company or one you work for\"\n                handleStateObject\n            />\n\n            <TextFieldGroup\n                name=\"website\"\n                placeholder=\"Website\"\n                value={formData.website}\n                onChange={handleOnChange}\n                error={errors.website}\n                info=\"Could be your own or a company website\"\n                handleStateObject\n            />\n\n            <TextFieldGroup\n                name=\"location\"\n                placeholder=\"Location\"\n                value={formData.location}\n                onChange={handleOnChange}\n                error={errors.location}\n                info=\"City & state suggested (eg. Boston, MA)\"\n                handleStateObject\n            />\n\n            <TextFieldGroup\n                name=\"skills\"\n                placeholder=\"* Skills\"\n                value={formData.skills}\n                onChange={handleOnChange}\n                error={errors.skills}\n                info=\"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\n                handleStateObject\n            />\n\n            <TextFieldGroup\n                name=\"githubUsername\"\n                placeholder=\"Github Username\"\n                value={formData.githubUsername}\n                onChange={handleOnChange}\n                error={errors.githubUsername}\n                info=\"If you want your latest repos and a Github link, include your username\"\n                handleStateObject\n            />\n\n            <TextAreaFieldGroup\n                name=\"bio\"\n                placeholder=\"A short bio of yourself\"\n                value={formData.bio}\n                onChange={handleOnChange}\n                error={errors.bio}\n                info=\"Tell us a little about yourself\"\n                handleStateObject\n            />\n\n            <div className=\"mb-3\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-dark btn-sm\"\n                    onClick={() => setDisplaySocial(!displaySocial)}\n                >\n                    {formType} Social Network Links\n                </button>\n                {formType === 'Add' && (<span className=\"text-muted\"> Optional</span>)}\n            </div>\n\n            {displaySocial ? (\n                <>\n                    <InputGroup\n                        name=\"twitter\"\n                        placeholder=\"Twitter Profile URL\"\n                        icon=\"twitter\"\n                        onChange={handleOnChange}\n                        value={formData.twitter}\n                        error={errors.twitter}\n                        handleStateObject\n                    />\n\n                    <InputGroup\n                        name=\"facebook\"\n                        placeholder=\"Facebook Page URL\"\n                        icon=\"facebook\"\n                        onChange={handleOnChange}\n                        value={formData.facebook}\n                        error={errors.facebook}\n                        handleStateObject\n                    />\n\n                    <InputGroup\n                        name=\"linkedin\"\n                        placeholder=\"Linkedin Profile URL\"\n                        icon=\"linkedin\"\n                        onChange={handleOnChange}\n                        value={formData.linkedin}\n                        error={errors.linkedin}\n                        handleStateObject\n                    />\n\n                    <InputGroup\n                        name=\"youtube\"\n                        placeholder=\"YouTube Channel URL\"\n                        icon=\"youtube\"\n                        onChange={handleOnChange}\n                        value={formData.youtube}\n                        error={errors.youtube}\n                        handleStateObject\n                    />\n\n                    <InputGroup\n                        name=\"instagram\"\n                        placeholder=\"Instagram Page URL\"\n                        icon=\"instagram\"\n                        onChange={handleOnChange}\n                        value={formData.instagram}\n                        error={errors.instagram}\n                        handleStateObject\n                    />\n                </>\n            ) : (\n                    <></>\n                )\n            }\n            <input\n                type=\"submit\"\n                className=\"btn btn-info btn-block mt-4 mb-4\"\n                value={`${formType === 'Add' ? 'Create' : 'Update'} Profile`}\n                disabled={disableButton}\n            />\n        </form>\n    );\n}\n\nCreateProfileForm.propTypes = {\n    disableButton: PropTypes.bool,\n    handleSubmit: PropTypes.func.isRequired,\n    formData: PropTypes.object.isRequired,\n    formType: PropTypes.string,\n    handleOnChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n};\n\nCreateProfileForm.defaultProps = {\n    errors: {},\n    formType: 'Add',\n    disableButton: false,\n};\n\nexport default CreateProfileForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CreateProfileForm from './CreateProfileForm';\nimport { createUserProfile } from '../../redux/actions/profileActions';\nimport { clearErrors } from '../../redux/actions/errorsAction';\n\nconst initialState = {\n    handle: '',\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubUsername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n};\n\nconst CreateProfile = (props) => {\n    const dispatch = useDispatch();\n    const [formData, setFormData] = useState(initialState);\n\n    const processingState = useSelector(state => state.processing.processing);\n    const errors = useSelector(state => state.errors);\n\n    const handleOnChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(createUserProfile(formData, props.history));\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Create Profile';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n                <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                <h1 className=\"display-4 text-center\">Create Your Profile</h1>\n                <p className=\"lead text-center\">Let's get some information to make your profile stand out</p>\n                <small className=\"d-block pb-3\">* is required field</small>\n\n                <CreateProfileForm\n                    errors={errors}\n                    formData={formData}\n                    handleOnChange={handleOnChange}\n                    handleSubmit={handleSubmit}\n                    disableButton={processingState}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CreateProfile;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CreateProfileForm from '../create-profile/CreateProfileForm';\nimport { createUserProfile, getCurrentProfile, refreshGravatar } from '../../redux/actions/profileActions';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { isEmpty } from '../../utils/utils';\n\nconst initialState = {\n    handle: '',\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubUsername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n};\n\nconst EditProfile = (props) => {\n    const dispatch = useDispatch();\n    const [formData, setFormData] = useState(initialState);\n\n    const profileState = useSelector(state => state.profile);\n    const processingState = useSelector(state => state.processing.processing);\n    const errors = useSelector(state => state.errors);\n    const avatar = profileState.profile ? profileState.profile.user.avatar : \"\";\n\n    const handleOnChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(createUserProfile(formData, props.history, 'updated'));\n    };\n\n    const setUserData = () => {\n        const profile = profileState.profile;\n        if (isEmpty(profile)) return;\n\n        // convert skills array to CSV\n        const skillsCSV = isEmpty(profile.skills) ? '' : profile.skills.join(', ');\n        profile.company = isEmpty(profile.company) ? '' : profile.company;\n        profile.website = isEmpty(profile.website) ? '' : profile.website;\n        profile.location = isEmpty(profile.location) ? '' : profile.location;\n        profile.githubUsername = isEmpty(profile.githubUsername) ? '' : profile.githubUsername;\n        profile.bio = isEmpty(profile.bio) ? '' : profile.bio;\n\n        // check for the social links\n        profile.social = isEmpty(profile.social) ? {} : profile.social;\n        profile.twitter = isEmpty(profile.social.twitter) ? '' : profile.social.twitter;\n        profile.facebook = isEmpty(profile.social.facebook) ? '' : profile.social.facebook;\n        profile.linkedin = isEmpty(profile.social.linkedin) ? '' : profile.social.linkedin;\n        profile.youtube = isEmpty(profile.social.youtube) ? '' : profile.social.youtube;\n        profile.instagram = isEmpty(profile.social.instagram) ? '' : profile.social.instagram;\n\n        // set the state for the form\n        setFormData({\n            handle: profile.handle,\n            company: profile.company,\n            website: profile.website,\n            location: profile.location,\n            status: profile.status,\n            skills: skillsCSV,\n            githubUsername: profile.githubUsername,\n            bio: profile.bio,\n            twitter: profile.twitter,\n            facebook: profile.facebook,\n            linkedin: profile.linkedin,\n            youtube: profile.youtube,\n            instagram: profile.instagram\n        });\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Edit Profile';\n        dispatch(clearErrors());\n        dispatch(getCurrentProfile());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        setUserData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [profileState]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n                <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                <h1 className=\"display-4 text-center\">Update Your Profile</h1>\n                <p className=\"lead text-center\">Keep your information updated to make your profile stand out</p>\n\n                <div className=\"row mb-3 align-items-center\">\n                    <div className=\"col-sm-4 text-center\">\n                        <img\n                            className=\"responsive rounded profile-avatar\"\n                            src={avatar}\n                            alt=\"Gravatar associated with your email\"\n                        />\n                    </div>\n                    <div className=\"col-sm-8 p-2 text-center\">\n                        <small>\n                            This gravatar associated with your e-mail address. If you have changed the gravatar then\n                            please click on refresh gravatar button to refresh your gravatar.\n                        </small>\n                        <div>\n                            <button\n                                className=\"btn btn-light btn-sm m-2\"\n                                onClick={() => dispatch(refreshGravatar())}\n                            >\n                                Refresh Gravatar\n                            </button>\n                        </div>\n                        <small className=\"text-muted text-sm text-left d-block\">\n                            You may need to refresh the browser if you are unable to see the refreshed gravatar\n                            due to browser cache\n                        </small>\n                    </div>\n                </div>\n\n                <small className=\"d-block mt-3 pb-2\">* is required field</small>\n                <CreateProfileForm\n                    errors={errors}\n                    formData={formData}\n                    handleOnChange={handleOnChange}\n                    handleSubmit={handleSubmit}\n                    formType=\"Edit\"\n                    disableButton={processingState}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nconst ExperienceForm = ({\n    errors,\n    handleFormSubmit,\n    handleChange,\n    handleCheck,\n    processing,\n    state,\n    type,\n}) => {\n    return (\n        <form onSubmit={handleFormSubmit}>\n            <TextFieldGroup\n                placeholder=\"* Company\"\n                name=\"company\"\n                value={state.company}\n                onChange={handleChange}\n                error={errors.company}\n                handleStateObject\n            />\n            <TextFieldGroup\n                placeholder=\"* Job Title\"\n                name=\"title\"\n                value={state.title}\n                onChange={handleChange}\n                error={errors.title}\n                handleStateObject\n            />\n            <TextFieldGroup\n                placeholder=\"Location\"\n                name=\"location\"\n                value={state.location}\n                onChange={handleChange}\n                error={errors.location}\n                handleStateObject\n            />\n            <h6>From Date</h6>\n            <TextFieldGroup\n                type=\"date\"\n                name=\"from\"\n                value={state.from}\n                onChange={handleChange}\n                error={errors.from}\n                handleStateObject\n            />\n            <h6>To Date</h6>\n            <TextFieldGroup\n                type=\"date\"\n                name=\"to\"\n                value={state.to}\n                onChange={handleChange}\n                error={errors.to}\n                disabled={state.disabled}\n                handleStateObject\n            />\n            <div className=\"form-check mb-4\">\n                <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"current\"\n                    value={state.current}\n                    onChange={handleCheck}\n                    checked={state.current}\n                    id=\"current-job\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"current-job\">\n                    Current Education\n                </label>\n            </div>\n            <TextAreaFieldGroup\n                name=\"description\"\n                placeholder=\"Job Description\"\n                value={state.description}\n                onChange={handleChange}\n                info=\"Some of your responsabilities, etc\"\n                handleStateObject\n            />\n            <input\n                type=\"submit\"\n                className=\"btn btn-info btn-block mt-4\"\n                value={`${type} Experience`}\n                disabled={processing}\n            />\n        </form>\n    )\n};\n\nExperienceForm.propTypes = {\n    errors: PropTypes.object.isRequired,\n    handleFormSubmit: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleCheck: PropTypes.func.isRequired,\n    processing: PropTypes.bool.isRequired,\n    state: PropTypes.object.isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nExperienceForm.defaultProps = {\n    errors: {},\n    processing: false,\n    type: 'Add',\n};\n\nexport default ExperienceForm;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { addExperience } from '../../redux/actions/profileActions';\nimport ExperienceForm from './ExperienceForm';\n\nconst initialState = {\n    company: '',\n    current: false,\n    disabled: false,\n    description: '',\n    from: '',\n    location: '',\n    title: '',\n    to: '',\n};\n\nconst AddExperience = (props) => {\n    const [state, setState] = useState(initialState);\n    const dispatch = useDispatch();\n\n    const errors = useSelector(state => state.errors);\n    const processing = useSelector(state => state.processing.processing);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const data = {\n            company: state.company,\n            current: state.current,\n            description: state.description,\n            from: state.from,\n            location: state.location,\n            title: state.title,\n            to: state.to,\n        };\n        dispatch(addExperience(data, props.history));\n    };\n\n    const handleChange = (e) => {\n        setState({ ...state, [e.target.name]: e.target.value });\n    };\n\n    const handleCheck = (e) => {\n        setState({\n            ...state,\n            current: !state.current,\n            disabled: !state.disabled\n        });\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Add Experience';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"section add-experience\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                        <h1 className=\"display-4 text-center\">Add an Experience</h1>\n                        <p className=\"lead text-center\">Add any developer/programming positions that you have had in the past or current</p>\n                        <small className=\"d-block pb-3 text-info\">Please add the most recent experience at last</small>\n                        <small className=\"d-block pb-3\">* = required field</small>\n                        <ExperienceForm\n                            errors={errors}\n                            handleFormSubmit={handleFormSubmit}\n                            handleChange={handleChange}\n                            handleCheck={handleCheck}\n                            processing={processing}\n                            state={state}\n                            type=\"Add\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AddExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nconst EducationForm = ({\n    errors,\n    handleChange,\n    handleCheck,\n    handleFormSubmit,\n    processing,\n    state,\n    type,\n}) => {\n    return (\n        <form onSubmit={handleFormSubmit}>\n            <TextFieldGroup\n                placeholder=\"* School Or Bootcamp\"\n                name=\"school\"\n                value={state.school}\n                onChange={handleChange}\n                error={errors.school}\n                handleStateObject\n            />\n            <TextFieldGroup\n                placeholder=\"* Degree Or Certificate\"\n                name=\"degree\"\n                value={state.degree}\n                onChange={handleChange}\n                error={errors.degree}\n                handleStateObject\n            />\n            <TextFieldGroup\n                placeholder=\"* Field Of Study\"\n                name=\"fieldOfStudy\"\n                value={state.fieldOfStudy}\n                onChange={handleChange}\n                error={errors.fieldOfStudy}\n                handleStateObject\n            />\n            <h6>From Date</h6>\n            <TextFieldGroup\n                type=\"date\"\n                name=\"from\"\n                value={state.from}\n                onChange={handleChange}\n                error={errors.from}\n                handleStateObject\n            />\n            <h6>To Date</h6>\n            <TextFieldGroup\n                type=\"date\"\n                name=\"to\"\n                value={state.to}\n                onChange={handleChange}\n                error={errors.to}\n                disabled={state.disabled}\n                handleStateObject\n            />\n            <div className=\"form-check mb-4\">\n                <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"current\"\n                    value={state.current}\n                    onChange={handleCheck}\n                    checked={state.current}\n                    id=\"current-job\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"current-job\">\n                    Current Job\n                </label>\n            </div>\n            <TextAreaFieldGroup\n                name=\"description\"\n                placeholder=\"Program Description\"\n                value={state.description}\n                onChange={handleChange}\n                info=\"Tell us about your education experience and what you learned\"\n                handleStateObject\n            />\n            <input\n                type=\"submit\"\n                className=\"btn btn-info btn-block mt-4\"\n                value={`${type} Education`}\n                disabled={processing}\n            />\n        </form>\n    );\n};\n\nEducationForm.propTypes = {\n    errors: PropTypes.object.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleCheck: PropTypes.func.isRequired,\n    handleFormSubmit: PropTypes.func.isRequired,\n    processing: PropTypes.bool.isRequired,\n    state: PropTypes.object.isRequired,\n    type: PropTypes.string,\n}\n\nEducationForm.defaultProps = {\n    errors: [],\n    processing: false,\n    type: 'Add',\n}\n\nexport default EducationForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { addEducation } from '../../redux/actions/profileActions';\nimport EducationForm from './EducationForm';\n\nconst initialState = {\n    current: false,\n    degree: '',\n    description: '',\n    fieldOfStudy: '',\n    from: '',\n    school: '',\n    to: '',\n    disabled: false,\n};\n\nconst AddEducation = (props) => {\n    const [state, setState] = useState(initialState);\n    const dispatch = useDispatch();\n\n    const errors = useSelector(state => state.errors);\n    const processing = useSelector(state => state.processing.processing);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const data = {\n            current: state.current,\n            degree: state.degree,\n            description: state.description,\n            fieldOfStudy: state.fieldOfStudy,\n            from: state.from,\n            school: state.school,\n            to: state.to,\n        };\n        dispatch(addEducation(data, props.history));\n    };\n\n    const handleChange = (e) => {\n        setState({ ...state, [e.target.name]: e.target.value });\n    };\n\n    const handleCheck = (e) => {\n        setState({\n            ...state,\n            current: !state.current,\n            disabled: !state.disabled\n        });\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Add Education';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"section add-education\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                        <h1 className=\"display-4 text-center\">Add Education</h1>\n                        <p className=\"lead text-center\">Add any school, bootcamp, etc that you have attended</p>\n                        <small className=\"d-block pb-3 text-info\">Please add the most recent education details at last</small>\n                        <small className=\"d-block pb-3\">* = required field</small>\n                        <EducationForm\n                            errors={errors}\n                            handleChange={handleChange}\n                            handleCheck={handleCheck}\n                            handleFormSubmit={handleFormSubmit}\n                            processing={processing}\n                            state={state}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AddEducation;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { updateExperience } from '../../redux/actions/profileActions';\nimport ExperienceForm from './ExperienceForm';\nimport { isEmpty, setDateFormat } from '../../utils/utils';\nimport emitToaster from '../../utils/alert';\n\nconst initialState = {\n    company: '',\n    current: false,\n    disabled: false,\n    description: '',\n    from: '',\n    location: '',\n    title: '',\n    to: '',\n};\n\nconst EditExperience = (props) => {\n    const [state, setState] = useState(initialState);\n    const locationState = props.location.state || {};\n    const [experience] = useState(locationState.experience || {});\n    const dispatch = useDispatch();\n\n    const errors = useSelector(state => state.errors);\n    const processing = useSelector(state => state.processing.processing);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const data = {\n            company: state.company,\n            current: state.current,\n            description: state.description,\n            from: state.from,\n            location: state.location,\n            title: state.title,\n            to: state.to,\n            id: experience._id,\n        };\n        dispatch(updateExperience(data, props.history));\n    };\n\n    const handleChange = (e) => {\n        setState({ ...state, [e.target.name]: e.target.value });\n    };\n\n    const handleCheck = (e) => {\n        setState({\n            ...state,\n            current: !state.current,\n            disabled: !state.disabled\n        });\n    };\n\n    const setExperienceFields = () => {\n        setState({\n            company: experience.company,\n            current: experience.current,\n            disabled: experience.current,\n            description: experience.description,\n            from: setDateFormat(new Date(experience.from)),\n            location: experience.location,\n            title: experience.title,\n            to: isEmpty(experience.to)\n                ? ''\n                : (experience.current\n                    ? ''\n                    : setDateFormat(new Date(experience.to))),\n        });\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Edit Experience';\n        if (isEmpty(experience)) {\n            emitToaster({\n                toastText: 'You can not edit an empty experience detail',\n                type: 'warning'\n            });\n            props.history.push('/dashboard');\n            return;\n        }\n        setExperienceFields();\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"section edit-experience\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                        <h1 className=\"display-4 text-center\">Update an Experience</h1>\n                        <p className=\"lead text-center\">Keep your profile updated for a better growth</p>\n                        <small className=\"d-block pb-3\">* = required field</small>\n                        <ExperienceForm\n                            errors={errors}\n                            handleFormSubmit={handleFormSubmit}\n                            handleChange={handleChange}\n                            handleCheck={handleCheck}\n                            processing={processing}\n                            state={state}\n                            type=\"Update\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default EditExperience;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { updateEducation } from '../../redux/actions/profileActions';\nimport EducationForm from './EducationForm';\nimport { isEmpty, setDateFormat } from '../../utils/utils';\nimport emitToaster from '../../utils/alert';\n\nconst initialState = {\n    current: false,\n    degree: '',\n    description: '',\n    fieldOfStudy: '',\n    from: '',\n    school: '',\n    to: '',\n    disabled: false,\n};\n\nconst EditEducation = (props) => {\n    const [state, setState] = useState(initialState);\n    const locationState = props.location.state || {};\n    const [education] = useState(locationState.education || {});\n    const dispatch = useDispatch();\n\n    const errors = useSelector(state => state.errors);\n    const processing = useSelector(state => state.processing.processing);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const data = {\n            current: state.current,\n            degree: state.degree,\n            description: state.description,\n            fieldOfStudy: state.fieldOfStudy,\n            from: state.from,\n            school: state.school,\n            to: state.to,\n            id: education._id,\n        };\n        dispatch(updateEducation(data, props.history));\n    };\n\n    const handleChange = (e) => {\n        setState({ ...state, [e.target.name]: e.target.value });\n    };\n\n    const handleCheck = (e) => {\n        setState({\n            ...state,\n            current: !state.current,\n            disabled: !state.disabled\n        });\n    };\n\n    const setEducationFields = () => {\n        setState({\n            current: education.current,\n            degree: education.degree,\n            disabled: education.current,\n            description: education.description,\n            fieldOfStudy: education.fieldOfStudy,\n            from: setDateFormat(new Date(education.from)),\n            school: education.school,\n            to: isEmpty(education.to)\n                ? ''\n                : (education.current\n                    ? ''\n                    : setDateFormat(new Date(education.to))),\n        });\n    };\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Edit Education';\n        if (isEmpty(education)) {\n            emitToaster({\n                toastText: 'You can not edit an empty education detail',\n                type: 'warning'\n            });\n            props.history.push('/dashboard');\n            return;\n        }\n        setEducationFields();\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"section edit-education\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to=\"/dashboard\" className=\"btn btn-light btn-xs\">Go Back</Link>\n                        <h1 className=\"display-4 text-center\">Update an Education</h1>\n                        <p className=\"lead text-center\">Keep your profile updated for a better growth</p>\n                        <small className=\"d-block pb-3\">* = required field</small>\n                        <EducationForm\n                            errors={errors}\n                            handleFormSubmit={handleFormSubmit}\n                            handleChange={handleChange}\n                            handleCheck={handleCheck}\n                            processing={processing}\n                            state={state}\n                            type=\"Update\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default EditEducation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { isEmpty } from '../../utils/utils';\n\nconst ProfileCard = ({\n    profile\n}) => {\n    const { user } = profile;\n    return (\n        <div className=\"card card-body bg-light mb-3\">\n            <div className=\"row align-items-center card-main\">\n                <div className=\"col-md-2 col-sm-6 text-center\">\n                    <img\n                        className=\"rounded-circle profile-avatar\"\n                        src={user.avatar}\n                        alt=\"Gravatar associated with your email\"\n                    />\n                </div>\n                <div className=\"col-md-6 col-sm-6 col-xs-12 card-detail\">\n                    <h3>{user.name}</h3>\n                    <p className=\"mb-1\">\n                        {profile.status} {isEmpty(profile.company) ? '' : <span>at {profile.company}</span>}\n                    </p>\n                    {isEmpty(profile.location) ? <></> : <p>{profile.location}</p>}\n                    <Link\n                        to={{\n                            pathname: `/profile/${profile.handle}`,\n                            state: 'profiles'\n                        }}\n                        className=\"btn btn-info btn-sm\"\n                    >\n                        View Profile\n                    </Link>\n                </div>\n                <div className=\"col-md-4 d-none d-md-block\">\n                    <h5>Skill Set</h5>\n                    <ul className=\"list-group\">\n                        {profile.skills.slice(0, 4).map((skill, index) => (\n                            <li className=\"list-group-item list-group-custom\" key={index}>\n                                <i className=\"fa fa-check pr-1\"></i> {skill}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nProfileCard.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileCard;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllProfiles } from '../../redux/actions/profileActions';\nimport Spinner from '../common/Spinner';\nimport ProfileCard from './ProfileCard';\n\nconst Profiles = () => {\n    const dispatch = useDispatch();\n    const profileState = useSelector(state => state.profile);\n    const { loading, profiles } = profileState;\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Developers';\n        dispatch(getAllProfiles());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div>\n            {loading ? (\n                <Spinner />\n            ) : (\n                    <>\n                        <div className=\"profiles\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <h1 className=\"display-4 text-center\">Developer Profiles</h1>\n                                        {profiles && profiles.length > 0 ? (\n                                            <>\n                                                <p className=\"lead text-center\">Browse and connect with developers</p>\n                                                {profiles.map(profile => <ProfileCard profile={profile} key={profile._id} />)}\n                                            </>\n                                        ) : (\n                                                <h4 className=\"display-5 text-center pt-5\">No profiles to show</h4>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n        </div>\n    );\n};\n\nexport default Profiles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../utils/utils';\n\nconst ProfileAbout = ({ profile }) => {\n    const { user, skills } = profile;\n    const firstName = user.name.trim().split(' ')[0];\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-body bg-light mb-3\">\n                <h3 className=\"text-center text-info\">{firstName}'s Bio</h3>\n                <p className=\"lead text-center\">\n                    {isEmpty(profile.bio) ? `${firstName} does not have a bio` : profile.bio}\n                </p>\n                <hr />\n                <h3 className=\"text-center text-info\">Skill Set</h3>\n                <div className=\"row\">\n                    <div className=\"d-flex flex-wrap justify-content-center align-items-center m-auto\">\n                        {skills.map((skill, index) => (\n                            <div className=\"p-3\" key={index}>\n                                <i className=\"fa fa-check\"></i> {skill}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../utils/utils';\n\nconst ProfileCreds = ({ experience, education }) => {\n    const experienceMarkup = experience.map(exp => (\n        <li className=\"list-group-item\" key={exp._id}>\n            <h4>{exp.company}</h4>\n            <p>\n                {new Date(exp.from).toLocaleDateString()}\n                {\" - \"}\n                {exp.current ? 'Present' : (exp.to ? new Date(exp.to).toLocaleDateString() : 'Present')}\n            </p>\n            <p><strong>Position:</strong> {exp.title}</p>\n            {isEmpty(exp.location) ? null : <p><strong>Location:</strong> {exp.location}</p>}\n            {isEmpty(exp.description) ? null : <p><strong>Description:</strong> {exp.description}</p>}\n        </li>\n    ));\n\n    const educationMarkup = education.map(edu => (\n        <li className=\"list-group-item\" key={edu._id}>\n            <h4>{edu.school}</h4>\n            <p>\n                {new Date(edu.from).toLocaleDateString()}\n                {\" - \"}\n                {edu.current ? 'Present' : (edu.to ? new Date(edu.to).toLocaleDateString() : 'Present')}\n            </p>\n            <p><strong>Degree:</strong> {edu.degree}</p>\n            <p><strong>Field Of Study:</strong> {edu.fieldOfStudy}</p>\n            {isEmpty(edu.description) ? null : <p><strong>Description:</strong> {edu.description}</p>}\n        </li>\n    ));\n\n    return (\n        <>\n            <div className=\"col-md-6 pt-2\">\n                <h3 className=\"text-center text-info\">Experience</h3>\n                {isEmpty(experience) ? (\n                    <p className=\"lead text-center\">No experience listed</p>\n                ) : (\n                        <ul className=\"list-group\">{experienceMarkup}</ul>\n                    )\n                }\n            </div>\n\n            <div className=\"col-md-6 pt-2\">\n                <h3 className=\"text-center text-info\">Education</h3>\n                {isEmpty(education) ? (\n                    <p className=\"lead text-center\">No education listed</p>\n                ) : (\n                        <ul className=\"list-group\">{educationMarkup}</ul>\n                    )\n                }\n            </div>\n        </>\n    );\n};\n\n\nProfileCreds.propTypes = {\n    experience: PropTypes.array.isRequired,\n    education: PropTypes.array.isRequired,\n};\n\nexport default ProfileCreds;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../utils/utils';\n\nconst ProfileGithub = ({ username }) => {\n    const options = {\n        type: 'owner',      // all, owner (default), member\n        sort: 'updated',    // values can be: created, updated, pushed, full_name (default)\n        direction: 'asc',   // asc (default), desc\n        repoCount: 5,\n    }\n    const [repos, setRepos] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        // using fetch API to prevent Auth Header and Token Verification\n        fetch(`https://api.github.com/users/${username}/repos?per_page=${options.repoCount}&sort=${options.sort}`)\n            .then(res => res.json())\n            .then(repos => {\n                if (repos && !isEmpty(repos.message)) {\n                    setError('');\n                    setRepos([]);\n                } else {\n                    setRepos(repos);\n                }\n            })\n            .catch(_err => {\n                setError('Unable to get GitHub repos');\n                setRepos([]);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"col-12 mt-3\">\n            <h3 className=\"mb-2 text-info text-center\">Latest Github Repos</h3>\n            {isEmpty(repos) ? (\n                <p className=\"text-center lead\">{error || 'This user doesn’t have any public repositories yet.'}</p>\n            ) : (\n                    repos.map(repo => (\n                        <div key={repo.id} className=\"card card-body mb-2\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4>\n                                        <a\n                                            className=\"text-dark\"\n                                            href={repo.html_url}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {repo.name}\n                                        </a>\n                                    </h4>\n                                    <p className=\"lead\">\n                                        {isEmpty(repo.description) ? \"This repo has no description\" : repo.description}\n                                    </p>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <span className=\"badge badge-warning m-1\">Language: {repo.language || 'Text'}</span>\n                                    <span className=\"badge badge-dark m-1\">License: {(repo.license && repo.license.name) || 'No license'}</span>\n                                    <span className=\"badge badge-success m-1\">Watchers: {repo.watchers_count}</span>\n                                    <span className=\"badge badge-secondary m-1\">Forks: {repo.forks_count}</span>\n                                    <span className=\"badge badge-info m-1\">Stars: {repo.stargazers_count}</span>\n                                    <span className=\"badge badge-light m-1\">\n                                        Size: {repo.size > 1023 ? `${(repo.size / 1024).toFixed(2)} MB` : `${repo.size} KB`}\n                                    </span>\n                                    {repo.homepage && (<span className=\"badge badge-success m-1\">\n                                        <a\n                                            href={repo.homepage}\n                                            className=\"text-light\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            Homepage\n                                        </a>\n                                    </span>)}\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                )}\n        </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    username: PropTypes.string.isRequired,\n};\n\nexport default ProfileGithub;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../utils/utils';\n\nconst ProfileHeader = ({ profile }) => {\n    const { user, social } = profile;\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-body bg-info text-white mb-3\">\n                <div className=\"row mt-3\">\n                    <div className=\"col m-auto text-center\">\n                        <img\n                            className=\"rounded-circle mb-2 profile-avatar\"\n                            src={user.avatar}\n                            alt=\"Gravatar associated with your email\"\n                        />\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <h1 className=\"display-4 text-center\">{user.name}</h1>\n                    <p className=\"text-center\">\n                        {profile.status} {isEmpty(profile.company) ? '' : <span>at {profile.company}</span>}\n                    </p>\n                    {isEmpty(profile.location) ? null : <p>{profile.location}</p>}\n                    <p>\n                        {isEmpty(profile.website) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={profile.website}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fas fa-globe fa-2x\"></i>\n                            </a>\n                        )}\n                        {isEmpty(social && social.twitter) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={social.twitter}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-twitter fa-2x\"></i>\n                            </a>\n                        )}\n                        {isEmpty(social && social.facebook) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={social.facebook}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-facebook fa-2x\"></i>\n                            </a>\n                        )}\n                        {isEmpty(social && social.linkedin) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={social.linkedin}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-linkedin fa-2x\"></i>\n                            </a>\n                        )}\n                        {isEmpty(social && social.instagram) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={social.instagram}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-instagram fa-2x\"></i>\n                            </a>\n                        )}\n                        {isEmpty(social && social.youtube) ? null : (\n                            <a\n                                className=\"text-white p-2\"\n                                href={social.youtube}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-youtube fa-2x\"></i>\n                            </a>\n                        )}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProfileHeader.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileHeader;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileCreds from './ProfileCreds';\nimport ProfileGithub from './ProfileGithub';\nimport ProfileHeader from './ProfileHeader';\nimport Spinner from '../common/Spinner';\nimport { getProfileByHandle } from '../../redux/actions/profileActions';\nimport { isEmpty } from '../../utils/utils';\n\nconst Profile = (props) => {\n    const dispatch = useDispatch();\n    const profileState = useSelector(state => state.profile);\n\n    const { profile, loading } = profileState;\n\n    const renderedFrom = props.location.state === 'dashboard' ? 'dashboard' : 'profiles';\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Profile';\n        dispatch(getProfileByHandle(props.match.params.handle, props.history));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"profile\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <Link\n                                    to={`/${renderedFrom}`}\n                                    className=\"btn btn-light mb-3 btn-xs\"\n                                >\n                                    {`Back to ${renderedFrom}`}\n                                </Link>\n                            </div>\n                        </div>\n                        {loading || isEmpty(profile) ? (\n                            <Spinner />\n                        ) : (\n                                <div className=\"row\">\n                                    <ProfileHeader profile={profile} />\n                                    <ProfileAbout profile={profile} />\n                                    <ProfileCreds\n                                        experience={profile.experience || []}\n                                        education={profile.education || []}\n                                    />\n                                    {isEmpty(profile.githubUsername) ? null : (\n                                        <ProfileGithub username={profile.githubUsername} />\n                                    )}\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <div className=\"row pt-5\">\n            <div className=\"col-10 m-auto text-center\">\n                <h2 className=\"display-4\">4 0 4</h2>\n                <div className=\"logo-404 display-5\">\n                    <p>\n                        ....-\n                        {' '}\n                        -----\n                        {' '}\n                        ....-\n                    </p>\n                </div>\n                <p className=\"lead mb-5\">\n                    Oh! You are finally here, but sadly you won't be able to find any developer here.\n                    <br />\n                    Being an introvert <strong>404 page</strong>, I would like to be alone and\n                    requesting you to click on the below button to be around developers.\n                </p>\n                <Link to=\"/profiles\" className=\"btn btn-dark btn\">View All Profiles</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","// import axios from 'axios';\nimport emitToaster from '../../utils/alert';\nimport { clearErrors, setErrors } from './errorsAction';\nimport {\n    ADD_POST,\n    DELETE_POST,\n    GET_POST,\n    GET_POSTS,\n    POST_LOADING,\n    REPLACE_POST,\n    RESET_TEXT\n} from './types';\nimport axiosAPI from '../../utils/axiosApiEndPoint';\n\nexport const addPost = postData => dispatch => {\n    dispatch(startPostLoading());\n    axiosAPI\n        .post('/api/post', postData)\n        .then(res => {\n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Your post is added successfully',\n                type: 'success'\n            });\n            dispatch(setResetText(true));\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            emitToaster({\n                toastText: (err.response.data && err.response.data.postSave) || 'Unable to save post',\n                type: 'error'\n            });\n            dispatch(setErrors(err.response.data));\n            dispatch(setResetText(false));\n        });\n};\n\nexport const getAllPosts = () => dispatch => {\n    dispatch(startPostLoading());\n    axiosAPI\n        .get('/api/post')\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_POSTS,\n                payload: []\n            });\n            emitToaster({\n                toastText: (err.response.data && err.response.data.nopost) || 'Unable to get posts',\n                type: 'error'\n            });\n        });\n}\n\nexport const getUserPosts = () => dispatch => {\n    dispatch(startPostLoading());\n    axiosAPI\n        .get('/api/post/user')\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_POSTS,\n                payload: []\n            });\n            emitToaster({\n                toastText: (err.response.data && err.response.data.nopost) || 'Unable to get posts',\n                type: 'error'\n            });\n        });\n};\n\nexport const deleteUserPost = (id) => dispatch => {\n    axiosAPI\n        .delete(`/api/post/${id}`)\n        .then(res => {\n            dispatch({\n                type: DELETE_POST,\n                payload: id,\n            });\n            emitToaster({\n                toastText: 'Post is successfully deleted',\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            dispatch(setErrors(err.response.data));\n            emitToaster({\n                toastText: (err.response.data.unableToDelete || err.response.data.nopost) || 'Unable to delete post',\n                type: 'error'\n            });\n        });\n};\n\nexport const fetchSinglePost = (id, dispatchType = null, history) => dispatch => {\n    if (dispatchType === null) {\n        dispatch(startPostLoading());\n    }\n    axiosAPI\n        .get(`/api/post/${id}`)\n        .then(res => {\n            dispatch({\n                type: dispatchType === 'replace' ? REPLACE_POST : GET_POST,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            if (history && history.push) {\n                history.push('/feed');\n            }\n            dispatch({\n                type: GET_POST,\n                payload: {}\n            });\n            emitToaster({\n                toastText: err.response.data.nopost || 'Unable to fetch post',\n                type: 'error'\n            });\n        });\n};\n\nexport const addPostLike = (id) => dispatch => {\n    axiosAPI\n        .post(`/api/post/like/${id}`)\n        .then(_res => {\n            dispatch(fetchSinglePost(id, 'replace'));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_POST,\n                payload: {}\n            });\n            emitToaster({\n                toastText: (err.response.data.alreadyLiked) || 'Unable to like the post',\n                type: 'error'\n            });\n        });\n};\n\nexport const removePostLike = (id) => dispatch => {\n    axiosAPI\n        .post(`/api/post/unlike/${id}`)\n        .then(_res => {\n            dispatch(fetchSinglePost(id, 'replace'));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_POST,\n                payload: {}\n            });\n            emitToaster({\n                toastText: (err.response.data.notLiked) || 'Unable to unlike the post',\n                type: 'error'\n            });\n        });\n};\n\nexport const addComment = (commentData, id) => dispatch => {\n    axiosAPI\n        .post(`/api/post/comment/${id}`, commentData)\n        .then(res => {\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Your comment is added successfully',\n                type: 'success'\n            });\n            dispatch(setResetText(true));\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            emitToaster({\n                toastText: (err.response.data && err.response.data.commentError) || 'Unable to save comment',\n                type: 'error'\n            });\n            dispatch(setErrors(err.response.data));\n            dispatch(setResetText(false));\n        });\n};\n\nexport const deleteUserComment = (params) => dispatch => {\n    axiosAPI\n        .delete(`/api/post/comment/${params.postID}/${params.commentID}`)\n        .then(res => {\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Your comment is deleted successfully',\n                type: 'success'\n            });\n        })\n        .catch(err => {\n            emitToaster({\n                toastText: err.response.data.commentDeleteError || err.response.data.notAuthorised || 'Unable to delete comment',\n                type: 'error'\n            });\n            dispatch(setErrors(err.response.data));\n        });\n};\n\nexport const editUserPost = (postData, postID, history) => dispatch => {\n    axiosAPI\n        .post(`/api/post/edit/${postID}`, postData)\n        .then(res => {\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            });\n            emitToaster({\n                toastText: 'Post is successfully updated',\n                type: 'success'\n            });\n            if (history && history.push) {\n                history.push('/feed');\n            }\n        })\n        .catch(err => {\n            emitToaster({\n                toastText: err.response.data.nopost || err.response.data.notAuthorised || 'Unable to edit the post',\n                type: 'error'\n            });\n            dispatch(setErrors(err.response.data));\n        });\n};\n\nexport const startPostLoading = () => ({\n    type: POST_LOADING\n});\n\nexport const setResetText = (payload) => ({\n    type: RESET_TEXT,\n    payload\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { addPost, setResetText } from '../../redux/actions/postActions';\nimport TextAreaFieldGruop from '../common/TextAreaFieldGroup';\n\nconst PostForm = () => {\n    const [text, setText] = useState('');\n    const processing = useSelector(state => state.processing.processing);\n    const errors = useSelector(state => state.errors);\n    const resetText = useSelector(state => state.post.resetText);\n    const dispatch = useDispatch();\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addPost({ text }));\n    };\n\n    useEffect(() => {\n        if (resetText) {\n            dispatch(setResetText(false));\n            setText('');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [resetText]);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Add Post';\n        dispatch(clearErrors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"post-form mb-3\">\n            <div className=\"card card-info\">\n                <div className=\"card-header bg-info text-white\">\n                    Create a post ...\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={handleFormSubmit}>\n                        <TextAreaFieldGruop\n                            name=\"text\"\n                            placeholder=\"Create a post\"\n                            value={text}\n                            onChange={setText}\n                            error={errors.text}\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-dark btn-sm\"\n                            disabled={processing}\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PostForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addPostLike, deleteUserPost, removePostLike } from '../../redux/actions/postActions';\nimport { initDelete } from '../../redux/actions/deleteActions';\n\nconst PostItem = ({ post, userID, showPostActions }) => {\n    const dispatch = useDispatch();\n\n    const postDate = new Date(post.date);\n\n    const handleDelete = () => {\n        dispatch(initDelete({\n            modalType: 'post',\n            modalFunc: deleteUserPost,\n            modalParam: post._id\n        }));\n    };\n\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <img\n                        className=\"rounded-circle d-none d-md-block\"\n                        src={post.avatar}\n                        alt=\"Gravatar associated with your email\"\n                    />\n                    <div />\n                    <p className=\"text-center lead m-0\"><strong>{post.name}</strong></p>\n                </div>\n                <div className=\"col-md-10\">\n                    {showPostActions && (\n                        <div className=\"m-1 text-right\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-light btn-sm mr-1\"\n                                data-toggle=\"tooltip\"\n                                title=\"Like\"\n                                onClick={() => dispatch(addPostLike(post._id))}\n                            >\n                                {/* added separate icon with key to handle fontAwesomeIssue with react */}\n                                {post.likes.filter(like => like.user === userID).length > 0\n                                    ? <span key=\"liked\"><i className=\"text-success fas fa-thumbs-up\"></i></span>\n                                    : <span key=\"not-liked\"><i className=\"text-secondary fas fa-thumbs-up\"></i></span>}\n                                <span className=\"badge badge-light\">{post.likes.length}</span>\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-light btn-sm mr-1\"\n                                data-toggle=\"tooltip\"\n                                title=\"Unlike\"\n                                onClick={() => dispatch(removePostLike(post._id))}\n                            >\n                                <i className=\"text-secondary fas fa-thumbs-down\"></i>\n                            </button>\n                            <Link\n                                to={`/post/${post._id}`}\n                                className=\"btn btn-dark mr-1 btn-sm\"\n                                data-toggle=\"tooltip\"\n                                title=\"Comments\"\n                            >\n                                <i className=\"text-light fas fa-comments\"></i>\n                                <span className=\"badge badge-dark\"> {post.comments.length}</span>\n                            </Link>\n                            {(userID === post.user) && (\n                                <>\n                                    <Link\n                                        to={`/edit-post/${post._id}`}\n                                        className=\"btn btn-dark mr-1 btn-sm\"\n                                        data-toggle=\"tooltip\"\n                                        title=\"Edit\"\n                                    >\n                                        <i className=\"text-light far fa-edit\"></i>\n                                    </Link>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-danger mr-1 btn-sm\"\n                                        onClick={handleDelete}\n                                        data-toggle=\"modal\"\n                                        data-target=\"#deleteRecord\"\n                                    >\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </>\n                            )}\n                        </div>\n                    )}\n                    <p className=\"lead\">{post.text}</p>\n                    <div className=\"text-right time-stamp\">\n                        <small className=\"text-muted\">{postDate.toLocaleString()}</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    userID: PropTypes.string,\n    showPostActions: PropTypes.bool,\n}\n\nPostItem.defaultProps = {\n    showPostActions: true,\n}\n\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport PostItem from './PostItem';\n\nconst PostFeed = ({ posts }) => {\n    const user = useSelector(state => state.auth.user);\n\n    return (\n        <div className=\"posts\">\n            {posts.length > 0 ? (\n                posts.map(post => <PostItem key={post._id} post={post} userID={user.id} />)\n            ) : (\n                    <div className=\"card card-body mb-3\">\n                        Post(s) are not available\n                    </div>\n                )\n            }\n        </div>\n    );\n};\n\nPostFeed.propTypes = {\n    posts: PropTypes.array.isRequired,\n}\n\nexport default PostFeed;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from './PostForm';\nimport Spinner from '../common/Spinner';\nimport { getAllPosts, getUserPosts } from '../../redux/actions/postActions';\nimport PostFeed from './PostFeed';\n\nconst Posts = () => {\n    const dispatch = useDispatch();\n\n    const { loading, posts } = useSelector(state => state.post);\n    const processing = useSelector(state => state.processing.processing);\n\n    const [userPost, setUserPost] = useState(false);\n\n    useEffect(() => {\n        if (userPost) {\n            dispatch(getUserPosts());\n        } else {\n            dispatch(getAllPosts());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userPost]);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Feed';\n        dispatch(getAllPosts());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"feed\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <PostForm />\n                        <div className=\"my-post\">\n                            <div className=\"form-check mb-4\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    name=\"current\"\n                                    value={userPost}\n                                    onChange={(e) => setUserPost(e.target.checked)}\n                                    checked={userPost}\n                                    id=\"user-post\"\n                                    disabled={processing}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"user-post\">\n                                    Check this to display only your posts\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"div-relative\">\n                            {loading ? <Spinner position=\"absolute\" /> : <PostFeed posts={posts} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Posts;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment, setResetText } from '../../redux/actions/postActions';\nimport TextAreaFieldGruop from '../common/TextAreaFieldGroup';\n\nconst CommentForm = ({ postID }) => {\n    const [text, setText] = useState('');\n    const processing = useSelector(state => state.processing.processing);\n    const errors = useSelector(state => state.errors);\n    const resetText = useSelector(state => state.post.resetText);\n    const dispatch = useDispatch();\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addComment({ text }, postID));\n    };\n\n    useEffect(() => {\n        if (resetText) {\n            dispatch(setResetText(false));\n            setText('');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [resetText]);\n\n    return (\n        <div className=\"post-form mb-3\">\n            <div className=\"card card-info\">\n                <div className=\"card-header bg-info text-white\">\n                    Add a comment\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={handleFormSubmit}>\n                        <TextAreaFieldGruop\n                            name=\"text\"\n                            placeholder=\"Reply to post\"\n                            value={text}\n                            onChange={setText}\n                            error={errors.text}\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-dark btn-sm\"\n                            disabled={processing}\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCommentForm.propTypes = {\n    postID: PropTypes.string.isRequired,\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { initDelete } from '../../redux/actions/deleteActions';\nimport { deleteUserComment } from '../../redux/actions/postActions';\n\n/**\n * post owner => can delete every post\n * comment owner => can only delete the respective comment\n */\n\nconst CommentItem = ({ comment, userID, post_id, post_user_id }) => {\n    const dispatch = useDispatch();\n\n    const commentDate = new Date(comment.date);\n\n    const handleDelete = () => {\n        dispatch(initDelete({\n            modalType: 'comment',\n            modalFunc: deleteUserComment,\n            modalParam: { postID: post_id, commentID: comment._id }\n        }));\n    };\n\n    return (\n        <div class=\"card card-body mb-3\">\n            <div class=\"row\">\n                <div class=\"col-md-2\">\n                    <img\n                        className=\"rounded-circle d-none d-md-block\"\n                        src={comment.avatar}\n                        alt=\"Gravatar associated with your email\"\n                    />\n                    <div />\n                    <p className=\"lead text-center m-0\"><strong>{comment.name}</strong></p>\n                </div>\n                <div class=\"col-md-10\">\n                    <div className=\"text-right\">\n                        {(userID === post_user_id || comment.user === userID) && (<button\n                            type=\"button\"\n                            className=\"btn btn-danger mr-1 btn-sm\"\n                            onClick={handleDelete}\n                            data-toggle=\"modal\"\n                            data-target=\"#deleteRecord\"\n                        >\n                            <i className=\"fas fa-times\" />\n                        </button>)}\n                    </div>\n                    <p class=\"lead\">{comment.text}</p>\n                    <div className=\"text-right time-stamp\">\n                        <small className=\"text-muted\">{commentDate.toLocaleString()}</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCommentItem.propTypes = {\n    comment: PropTypes.object.isRequired,\n    userID: PropTypes.string.isRequired,\n    post_id: PropTypes.string.isRequired,\n    post_user_id: PropTypes.string.isRequired,\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport CommentItem from './CommentItem';\n\nconst CommentFeed = ({ comments, post_id, post_user_id }) => {\n    const userID = useSelector(state => state.auth.user.id);\n\n    return (\n        <div className=\"comments\">\n            {comments.map(comment => (\n                <CommentItem\n                    key={comment._id}\n                    comment={comment}\n                    post_id={post_id}\n                    userID={userID}\n                    post_user_id={post_user_id}\n                />\n            ))}\n        </div>\n    );\n};\n\nCommentFeed.propTypes = {\n    comments: PropTypes.array.isRequired,\n    post_id: PropTypes.string.isRequired,\n    post_user_id: PropTypes.string.isRequired,\n};\n\nexport default CommentFeed;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchSinglePost } from '../../redux/actions/postActions';\nimport Spinner from '../common/Spinner';\nimport CommentForm from '../comment/CommentForm';\nimport PostItem from './PostItem';\nimport CommentFeed from '../comment/CommentFeed';\n\nconst SinglePost = (props) => {\n    const dispatch = useDispatch();\n    const { post, loading } = useSelector(state => state.post);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Comments Section';\n        const postID = props.match.params.id;\n        dispatch(fetchSinglePost(postID, null, props.history));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            {loading ? <Spinner /> : (\n                <>\n                    <Link to=\"/feed\" className=\"btn btn-light btn-xs mb-3\">Back to post feed</Link>\n                    <PostItem post={post} showPostActions={false} />\n                    <CommentForm postID={props.match.params.id} />\n                    {post.comments && post.comments.length > 0 && (\n                        <CommentFeed comments={post.comments} post_id={post._id} post_user_id={post.user} />\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default SinglePost;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../redux/actions/errorsAction';\nimport { editUserPost, fetchSinglePost, setResetText } from '../../redux/actions/postActions';\nimport TextAreaFieldGruop from '../common/TextAreaFieldGroup';\n\nconst EditPost = (props) => {\n    const [text, setText] = useState('');\n\n    const processing = useSelector(state => state.processing.processing);\n    const post = useSelector(state => state.post.post);\n    const errors = useSelector(state => state.errors);\n    const resetText = useSelector(state => state.post.resetText);\n\n    const dispatch = useDispatch();\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        dispatch(editUserPost({ text }, post._id, props.history));\n    };\n\n    useEffect(() => {\n        setText(post.text);\n    }, [post]);\n\n    useEffect(() => {\n        if (resetText) {\n            dispatch(setResetText(false));\n            setText('');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [resetText]);\n\n    useEffect(() => {\n        document.title = 'Dev Social Media : Edit Post';\n        dispatch(clearErrors());\n        dispatch(fetchSinglePost(props.match.params.id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <Link to=\"/feed\" className=\"btn btn-light btn-xs mb-3\">Back to post feed</Link>\n            <div className=\"post-form mb-3\">\n                <div className=\"card card-info\">\n                    <div className=\"card-header bg-info text-white\">\n                        Edit Your Post\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={handleFormSubmit}>\n                            <TextAreaFieldGruop\n                                name=\"text\"\n                                placeholder=\"Edit your post\"\n                                value={text}\n                                onChange={setText}\n                                error={errors.text}\n                            />\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-dark btn-sm\"\n                                disabled={processing}\n                            >\n                                Update Post\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default EditPost;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Landing from './components/layouts/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport PrivateRoute from './components/common/PrivateRoute';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/create-profile/CreateProfile';\nimport EditProfile from './components/edit-profile/EditProfile';\nimport AddExperience from './components/experience/AddExperience';\nimport AddEducation from './components/education/AddEducation';\nimport EditExperience from './components/experience/EditExperience';\nimport EditEducation from './components/education/EditEducation';\nimport Profiles from './components/all-profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport NotFound from './components/not-found/NotFound';\nimport Posts from './components/post/Posts';\nimport SinglePost from './components/post/SinglePost';\nimport EditPost from './components/post/EditPost';\n\nconst Routing = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route>\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                    <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n                    <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n                    <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n                    <PrivateRoute exact path=\"/edit-experience\" component={EditExperience} />\n                    <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n                    <PrivateRoute exact path=\"/edit-education\" component={EditEducation} />\n                    <PrivateRoute exact path=\"/feed\" component={Posts} />\n                    <PrivateRoute exact path=\"/post/:id\" component={SinglePost} />\n                    <PrivateRoute exact path=\"/edit-post/:id\" component={EditPost} />\n                    <Route exact path=\"/profiles\" component={Profiles} />\n                    <Route exact path=\"/profile/:handle\" component={Profile} />\n                    <Route exact path=\"/*\" component={NotFound} />\n                </Switch>\n            </div>\n        </Route>\n    </Switch>\n);\n\nexport default Routing;\n","import { PROCESSING } from \"./types\";\n\nexport const setProcessing = (isProcessing) => ({\n    type: PROCESSING,\n    payload: isProcessing,\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isEmpty } from '../../utils/utils';\n\nconst DeleteRecord = () => {\n    const dispatch = useDispatch();\n    const processing = useSelector(state => state.processing.processing);\n    const deleteState = useSelector(state => state.delete);\n\n    const handleDelete = () => {\n        const param = deleteState.modalParam;\n        if (isEmpty(param)) {\n            dispatch(deleteState.modalFunc());\n        } else {\n            dispatch(deleteState.modalFunc(param));\n        }\n        window.$('#deleteRecord').modal('hide');\n    };\n\n    return (\n        <div className=\"modal fade\" id=\"deleteRecord\" tabIndex=\"-1\" aria-labelledby=\"deleteRecord\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"deleteRecordTitle\">Delete {deleteState.modalType}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>\n                            Are you sure you want to delete this {deleteState.modalType}.\n                            <br />\n                            This can not be undone.\n                        </p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Close</button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={handleDelete}\n                            disabled={processing}\n                        >\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DeleteRecord;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport Navbar from './components/layouts/Navbar';\nimport Footer from './components/layouts/Footer';\n\nimport store from './redux/store';\nimport Routing from './Routing';\n\nimport setAuthToken from './utils/setAuthToken';\nimport { logoutUser, setCurrentUser } from './redux/actions/authActions';\nimport { clearProfile } from './redux/actions/profileActions';\nimport initInterceptor from './utils/addInterceptor';\nimport DeleteRecord from './components/common/DeleteRecord';\n\n// add an interceptor to check for Unauthorized request - user will be logged out\ninitInterceptor();\n\n// check for authToken (jwt token)\nif (localStorage.authToken) {\n    // set authToken in headers\n    setAuthToken(localStorage.authToken);\n    // decode the authToken\n    const decodedToken = jwt_decode(localStorage.authToken);\n    // save current user info to redux store\n    store.dispatch(setCurrentUser(decodedToken));\n\n    // check for expired token\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n        // logout the user\n        store.dispatch(logoutUser());\n        // clear current profile\n        store.dispatch(clearProfile());\n        // redirect to login\n        window.location.href = '/login';\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <HashRouter basename={process.env.PUBLIC_URL} hashType=\"slash\">\n                <div className=\"wrapper\">\n                    <Navbar />\n                    <div className=\"App\">\n                        <Routing />\n                    </div>\n                    <Footer />\n                    <ToastContainer />\n                    <DeleteRecord />\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { logoutUser } from '../redux/actions/authActions';\nimport { setProcessing } from '../redux/actions/utilActions';\nimport store from '../redux/store';\nimport emitToaster from './alert';\n\nconst initInterceptor = () => {\n    axios.interceptors.request.use(req => {\n        store.dispatch(setProcessing(true));\n        return req;\n    }, err => {\n        store.dispatch(setProcessing(false));\n        return Promise.reject(err);\n    });\n\n    axios.interceptors.response.use(response => {\n        store.dispatch(setProcessing(false));\n        return response;\n    }, err => {\n        if (err.response.data.toString().toLowerCase() === 'unauthorized') {\n            store.dispatch(logoutUser());\n            emitToaster({\n                toastText: \"Unauthorized Access is not permitted\",\n                type: 'error',\n            });\n        }\n        store.dispatch(setProcessing(false));\n        return Promise.reject(err);\n    });\n}\n\nexport default initInterceptor;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}